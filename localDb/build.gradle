apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'
sourceCompatibility = 1.8

buildscript {
    repositories { maven { url 'http://repo-vip.tivo.com:8081/artifactory/plugins-release' } }
}

mainClassName = 'com.tivo.KafkaMongoDocker'

// Replace log4j with logback in all the depedencies
configurations.all {
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "log4j", module: "log4j"
    resolutionStrategy.force 'com.fasterxml.jackson.core:jackson-databind:2.8.7'
}

group = 'localDb'
version = '1.1.0-SNAPSHOT'

description = """kafka-connect-mongodb"""
sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    TWS_NEXTGEN_SCHEMA_VERSION = '1.0.+'
    SVCUTIL_VERSION = '1.0.239'
    TIVO_SERDES_VERSION = '0.2.+'
    KAFKA_VERSION = '1.0.0'
    APACHE_CLI_VERSION = '1.3.1'
    INCEPTION_UTIL_VERSION = '1.2.34'
    HTTPCLIENT_VERSION = '4.5.3'
    JSON_VERSION = '20160810'
    KAFKA_VERSION = '1.0.0'
    LOGBACK_CLASSIC_VERSION = '1.1.+'
    SLF4J_VERSION = '1.7.13'
    SPARK_JAVA_VERSION = '2.5.2'
    SVCUTIL_VERSION = '1.0.239'
    TWS_NEXTGEN_TRIO_CORE_VERSION = '1.0.12'
}

repositories {

    maven { url "http://packages.confluent.io/maven/" }
    maven { url "http://repo.maven.apache.org/maven2" }
    maven { url 'http://repo-vip.tivo.com:8081/artifactory/libs-release' }
}
dependencies {
    compile group: 'org.mongodb', name: 'mongodb-driver', version:'3.6.3'
    compile group: 'com.github.jcustenborder.kafka.connect', name: 'connect-utils', version:'[0.2.31,0.2.1000)'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version:'2.9.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.9.0'

    compile group: 'com.esotericsoftware.yamlbeans', name: 'yamlbeans', version:'1.12'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'
    compile(group: 'com.tivo.serviceutil', name: 'svcutil', version: SVCUTIL_VERSION)
    compile(group: 'ch.qos.logback', name: 'logback-classic', version: LOGBACK_CLASSIC_VERSION)
    compile(group: 'org.slf4j', name: 'log4j-over-slf4j', version: SLF4J_VERSION)
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version:'5.1.0'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version:'5.1.0'
    testCompile group: 'org.junit.vintage', name: 'junit-vintage-engine', version:'5.1.0'
    testCompile group: 'org.junit.platform', name: 'junit-platform-runner', version:'1.1.0'
    testCompile group: 'org.junit.platform', name: 'junit-platform-console', version:'1.1.0'
    testCompile group: 'org.hamcrest', name: 'hamcrest-junit', version:'2.0.0.0'
    testCompile group: 'org.mockito', name: 'mockito-core', version:'2.9.0'
    testCompile group: 'org.testcontainers', name: 'testcontainers', version:'1.4.3'
    testCompile group: 'com.squareup.okhttp3', name: 'okhttp', version:'3.9.1'
    testCompile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version:'2.9.0'
    compile(group: 'org.apache.kafka', name: 'kafka-clients', version: KAFKA_VERSION)
    compileOnly group: 'org.apache.kafka', name: 'connect-api', version:'1.0.1'
    compile(group: 'com.tivo.tws.inception', name: 'twsNextGenTrioCore', version: TWS_NEXTGEN_TRIO_CORE_VERSION)
    compile(group: "com.tivo.twsnextgen", name: "twsNextGenSchema", version: TWS_NEXTGEN_SCHEMA_VERSION) {
        exclude group: 'org.springframework'
        exclude group: 'javax.servlet'
        exclude group: 'org.slf4j'
        exclude group: 'javax.validation'
    }
    compile group: 'org.apache.httpcomponents', name: 'httpcore', version: '4.4.9'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: HTTPCLIENT_VERSION
    compile(group: 'com.tivo.kafka', name: 'tivo-serdes', version: TIVO_SERDES_VERSION)
    compile(group: 'com.tivo.inception.core', name: 'b-inception-util', version: INCEPTION_UTIL_VERSION)
    compile(group: 'com.tivo.serviceutil', name: 'svcutil', version: SVCUTIL_VERSION)
    compile(group: 'com.sparkjava', name: 'spark-core', version: SPARK_JAVA_VERSION)
    compile(group: 'org.apache.kafka', name: 'kafka-streams', version: KAFKA_VERSION)

    compile(group: 'commons-cli', name: 'commons-cli', version: APACHE_CLI_VERSION)
}

task wrapper(type: Wrapper) {  gradleVersion = '3.5' }

configurations {
    providedRuntime
    jar.archiveName = 'kafkamongodocker.jar'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

jar {
    from {
        (configurations.runtime).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    exclude 'sourceSets.test.output'
    manifest {
        attributes("Main-Class": "com.tivo.KafkaMongoDocker")
    }
}
